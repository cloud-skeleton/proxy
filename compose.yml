---
x-templates:
  job: &job-template
    deploy: &job-template-deploy
      labels: &job-template-deploy-labels
        eu.cloudskeleton.service: "true"
        eu.cloudskeleton.service.type: job
      mode: replicated-job
      placement:
        constraints:
          - node.labels.eu.cloudskeleton.node.type==main-worker
      resources: &job-template-deploy-resources
        limits:
          cpus: "0.5"
          memory: 128M
          pids: 1024
        reservations:
          cpus: "0.5"
          memory: 128M
      restart_policy: &job-template-deploy-restart-policy
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s
    entrypoint: bash -c
    init: true
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 10m
    networks:
      - bridge
    stop_grace_period: 30s
    ulimits:
      core: 
        hard: 0
        soft: 0
      nofile:
        hard: 40000
        soft: 20000
      nproc:
        hard: 65535
        soft: 65535

  network: &network-template
    driver: overlay
    driver_opts:
      encrypted: "true"

  service: &service-template
    <<: *job-template
    deploy: &service-template-deploy
      endpoint_mode: vip
      labels: &service-template-deploy-labels
        eu.cloudskeleton.service: "true"
        eu.cloudskeleton.service.type: service
      mode: replicated
      resources: &service-template-deploy-resources
        <<: *job-template-deploy-resources
      restart_policy: &service-template-deploy-restart-policy
        <<: *job-template-deploy-restart-policy
      rollback_config: &service-template-deploy-rollback-config
        delay: 10s
        failure_action: continue
        max_failure_ratio: 0
        monitor: 60s
        order: start-first
        parallelism: 1
      update_config: &service-template-deploy-update-config
        delay: 10s
        failure_action: rollback
        max_failure_ratio: 0
        monitor: 60s
        order: start-first
        parallelism: 1
    healthcheck: &service-template-deploy-healthcheck
      interval: 10s
      start_interval: 2s
      start_period: 10s
      timeout: 3s

# configs:
#   traefik_dynamic:
#     file:  configs/traefic_dynamic.yml

#   traefik_static:
#     file: configs/traefic_static.yml

networks:
  bridge:
    <<: *network-template
    ipam:
      config:
        - subnet: ${PROXY_NETWORK_CIDR:-10.0.0.0/24}

  isolated:
    <<: *network-template
    attachable: false
    internal: true

services:
  resources-reserve:
    <<: *service-template
    deploy:
      <<: *service-template-deploy
      mode: global
      placement:
        constraints: []
      resources:
        <<: *service-template-deploy-resources
        limits:
          cpus: ${RESERVE_VCPU:-0.5}
          memory: ${RESERVE_MEMORY:-512M}
        reservations:
          cpus: ${RESERVE_VCPU:-0.5}
          memory: ${RESERVE_MEMORY:-512M}
      rollback_config:
        <<: *service-template-deploy-rollback-config
        monitor: 3s
        order: stop-first
        parallelism: 0
      update_config:
        <<: *service-template-deploy-update-config
        monitor: 3s
        order: stop-first
        parallelism: 0
    image: tianon/sleeping-beauty:latest
    networks:
      isolated:
        aliases:
          - resources-reserve.${BASE_DOMAIN:?}

  # traefik:
    # <<: *service-template
    # configs:
    #   - mode: 0440
    #     source: traefik_static
    #     target: /etc/traefik/traefik.yml
    #   - mode: 0440
    #     source: traefik_dynamic
    #     target: /etc/traefik/dynamic.yml
    # deploy:
    #   resources:
    #     limits:
    #       memory: 48M
    # env_file: .dns.env
    # extends:
    #   file: compose.templates.yml
    #   service: service
    # healthcheck:
    #   # @TODO: Leaving this as workaround until https://github.com/traefik/traefik/issues/11593 is fixed
    #   test:
    #     - CMD
    #     - wget
    #     - --spider
    #     - -q
    #     - https://${HOSTNAME:?}/ping
    # image: traefik:3.4.3
    # networks:
    #   bridge:
    #     aliases:
    #       - ${HOSTNAME:?}
    #     ipv4_address: ${TRAEFIK_PRIVATE_IPV4:-10.0.0.2}
    # ports:
    #   - 80:80
    #   - 443:443
    # volumes:
    #   - ${DOCKER_SOCKET:-/var/run/docker.sock}:/var/run/docker.sock:ro
    #   - ./state/traefik/certificates:/certificates
...
